#!/bin/bash
# Giant AI Dev Setup - LLM-agnostic AI development toolkit
# Supports Claude, OpenAI, and other LLM providers

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
AI_DEV_DIR="$(dirname "$SCRIPT_DIR")"
DOTFILES_DIR="$(dirname "$(dirname "$AI_DEV_DIR")")"

echo "Giant AI Dev Setup"
echo "========================="
echo "Giant AI Dev directory: $AI_DEV_DIR"
echo ""

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check prerequisites
echo "Checking prerequisites..."

if ! command_exists python3; then
    echo "❌ Python 3 is not installed"
    exit 1
fi

if ! command_exists node; then
    echo "❌ Node.js is not installed"
    exit 1
fi

if ! command_exists npm; then
    echo "❌ npm is not installed"
    exit 1
fi

echo "✅ All prerequisites met"
echo ""

# Create isolated Python environment
VENV_DIR="$AI_DEV_DIR/.venv"
if [ ! -d "$VENV_DIR" ]; then
    echo "Creating isolated Python environment..."
    python3 -m venv "$VENV_DIR"
fi

# Install Python dependencies in isolated environment
echo "Installing Python dependencies in isolated environment..."
source "$VENV_DIR/bin/activate"
pip install --upgrade pip >/dev/null 2>&1
cd "$AI_DEV_DIR/rag"
pip install -r requirements.txt
deactivate
echo "✅ Python dependencies installed in isolated environment"
echo ""

# Install Node.js dependencies
echo "Installing Node.js dependencies for MCP..."
cd "$AI_DEV_DIR/mcp"
npm install
echo "✅ Node.js dependencies installed"
echo ""

# Make scripts executable
echo "Making scripts executable..."
chmod +x "$AI_DEV_DIR/scripts/"*
chmod +x "$AI_DEV_DIR/rag/indexer.py"
chmod +x "$AI_DEV_DIR/rag/search.py"
chmod +x "$AI_DEV_DIR/mcp/project-server.js"
echo "✅ Scripts made executable"
echo ""

# Create wrapper scripts for Python tools that use the virtual environment
echo "Creating CLI wrapper scripts..."
mkdir -p ~/.local/bin

# Create ai-rag wrapper with virtual environment
cat > ~/.local/bin/ai-rag << EOF
#!/bin/bash
# Wrapper script for ai-rag that uses isolated Python environment
source "$AI_DEV_DIR/.venv/bin/activate" 2>/dev/null
exec python3 "$AI_DEV_DIR/rag/indexer.py" "\$@"
EOF
chmod +x ~/.local/bin/ai-rag

# Create ai-search wrapper with virtual environment
cat > ~/.local/bin/ai-search << EOF
#!/bin/bash
# Wrapper script for ai-search that uses isolated Python environment
source "$AI_DEV_DIR/.venv/bin/activate" 2>/dev/null
exec python3 "$AI_DEV_DIR/rag/search.py" "\$@"
EOF
chmod +x ~/.local/bin/ai-search

# Create ai-agent wrapper with virtual environment
cat > ~/.local/bin/ai-agent << EOF
#!/bin/bash
# Wrapper script for ai-agent that uses isolated Python environment
source "$AI_DEV_DIR/.venv/bin/activate" 2>/dev/null
exec python3 "$AI_DEV_DIR/scripts/ai-agent" "\$@"
EOF
chmod +x ~/.local/bin/ai-agent

# Create ai-pattern-refactor wrapper with virtual environment
cat > ~/.local/bin/ai-pattern-refactor << EOF
#!/bin/bash
# Wrapper script for ai-pattern-refactor that uses isolated Python environment
source "$AI_DEV_DIR/.venv/bin/activate" 2>/dev/null
exec python3 "$AI_DEV_DIR/tools/ai-pattern-refactor" "\$@"
EOF
chmod +x ~/.local/bin/ai-pattern-refactor

# Other tools (bash scripts, don't need venv)
ln -sf "$AI_DEV_DIR/scripts/ai-setup" ~/.local/bin/ai-setup
ln -sf "$AI_DEV_DIR/scripts/ai-init-project" ~/.local/bin/ai-init-project
ln -sf "$AI_DEV_DIR/scripts/ai-init-project-smart" ~/.local/bin/ai-init-project-smart

echo "✅ CLI tools created with isolated Python environment"
echo ""

# Set up MCP hub configuration
echo "Configuring MCP hub..."
MCP_CONFIG_DIR=~/.config/mcp-hub
mkdir -p "$MCP_CONFIG_DIR"

cat >"$MCP_CONFIG_DIR/config.json" <<EOF
{
  "servers": {
    "ai-project-context": {
      "command": "node",
      "args": ["$AI_DEV_DIR/mcp/project-server.js"],
      "env": {},
      "auto_start": false
    }
  }
}
EOF

echo "✅ MCP hub configured"
echo ""

# Create global RAG database directory
echo "Creating global RAG database directory..."
mkdir -p ~/.ai-dev/rag/db
echo "✅ RAG database directory created"
echo ""

# Setup complete
echo "🎉 Setup complete!"
echo ""
echo "Next steps:"
echo "1. Add ~/.local/bin to your PATH if not already there"
echo "2. Run 'ai-rag index <project-path>' to index a project"
echo "3. Run 'ai-init-project[-smart]' in a project directory to set up project-specific config"
echo "4. Configure your editor with the provided enhancements"
echo ""
echo "Available commands:"
echo "  ai-rag index <path>        - Index a codebase for semantic search"
echo "  ai-rag search <query>      - Search indexed codebases"
echo "  ai-search <query> [path]   - Quick search in a project"
echo "  ai-init-project            - Initialize project-specific AI config"
echo "  ai-init-project-smart      - Initialize with smart auto-detection (recommended)"
echo "  ai-init-project-smart --clean - Fresh install with auto-detection"
echo "  ai-agent task <desc>       - Execute autonomous agent task"
echo "  ai-agent interactive       - Interactive agent mode with checkpoints"
echo "  ai-pattern-refactor        - Semantic pattern-based refactoring across files"
echo ""

